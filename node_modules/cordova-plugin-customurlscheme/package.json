{
  "_args": [
    [
      {
        "raw": "https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
        "spec": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
          "sshUrl": "git+ssh://git@github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
          "httpsUrl": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
          "gitUrl": "git://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
          "shortcut": "github:EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin",
          "directUrl": "https://raw.githubusercontent.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin/master/package.json"
        }
      },
      "E:\\HFBBAckup\\Co-brand_Stage_v7.8.5\\BJC HealthCare\\node_modules"
    ]
  ],
  "_from": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
  "_id": "cordova-plugin-customurlscheme@4.3.0",
  "_inCache": true,
  "_location": "/cordova-plugin-customurlscheme",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
    "spec": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
      "sshUrl": "git+ssh://git@github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
      "httpsUrl": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
      "gitUrl": "git://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
      "shortcut": "github:EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin",
      "directUrl": "https://raw.githubusercontent.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git#2130d44a5400ff7503804662c32bdfe6f23a7e22",
  "_shasum": "8fc1bad93b73bf0167194905283dc2a98f754854",
  "_shrinkwrap": null,
  "_spec": "https://github.com/EddyVerbruggen/LaunchMyApp-PhoneGap-Plugin.git",
  "_where": "E:\\HFBBAckup\\Co-brand_Stage_v7.8.5\\BJC HealthCare\\node_modules",
  "author": {
    "name": "Eddy Verbruggen",
    "email": "eddyverbruggen@gmail.com",
    "url": "https://github.com/EddyVerbruggen"
  },
  "bugs": {
    "url": "https://github.com/EddyVerbruggen/Custom-URL-scheme/issues"
  },
  "cordova": {
    "id": "cordova-plugin-customurlscheme",
    "platforms": [
      "ios",
      "android",
      "windows8",
      "windows"
    ]
  },
  "dependencies": {},
  "description": "Launch your app by using this URL:  mycoolapp://, you can add a path and even pass params like this: mycoolerapp://somepath?foo=bar",
  "devDependencies": {},
  "engines": [
    {
      "name": "cordova",
      "version": ">=3.0.0"
    }
  ],
  "gitHead": "2130d44a5400ff7503804662c32bdfe6f23a7e22",
  "homepage": "https://github.com/EddyVerbruggen/Custom-URL-scheme#readme",
  "keywords": [
    "Custom URL Scheme",
    "URLscheme",
    "URL scheme",
    "Custom URL",
    "Launch My App",
    "Launch App",
    "ecosystem:cordova",
    "cordova-ios",
    "cordova-android",
    "cordova-windows",
    "cordova-windows8"
  ],
  "license": "MIT",
  "name": "cordova-plugin-customurlscheme",
  "optionalDependencies": {},
  "readme": "# Custom URL scheme Cordova/PhoneGap Plugin\r\n#### launch your app by a link like this: `mycoolapp://`\r\n\r\n[![NPM version][npm-image]][npm-url]\r\n[![Downloads][downloads-image]][npm-url]\r\n[![Twitter Follow][twitter-image]][twitter-url]\r\n\r\n[npm-image]:http://img.shields.io/npm/v/cordova-plugin-customurlscheme.svg\r\n[npm-url]:https://npmjs.org/package/cordova-plugin-customurlscheme\r\n[downloads-image]:http://img.shields.io/npm/dm/cordova-plugin-customurlscheme.svg\r\n[twitter-image]:https://img.shields.io/twitter/follow/eddyverbruggen.svg?style=social&label=Follow%20me\r\n[twitter-url]:https://twitter.com/eddyverbruggen\r\n\r\n1. [Description](https://github.com/EddyVerbruggen/Custom-URL-scheme#1-description)\r\n2. [Installation](https://github.com/EddyVerbruggen/Custom-URL-scheme#2-installation)\r\n\t1. [Automatically (CLI / Plugman)](https://github.com/EddyVerbruggen/Custom-URL-scheme#automatically-cli--plugman)\r\n\t2. [Manually](https://github.com/EddyVerbruggen/Custom-URL-scheme#manually)\r\n\t3. [PhoneGap Build](https://github.com/EddyVerbruggen/Custom-URL-scheme#phonegap-build)\r\n3. [Usage](https://github.com/EddyVerbruggen/Custom-URL-scheme#3-usage)\r\n\t1. [iOS](https://github.com/EddyVerbruggen/Custom-URL-scheme#ios-usage)\r\n\t2. [Meteor](https://github.com/EddyVerbruggen/Custom-URL-scheme#meteor--getlastintent-android-only)\r\n4. [URL Scheme hints](https://github.com/EddyVerbruggen/Custom-URL-scheme#4-url-scheme-hints)\r\n5. [License](https://github.com/EddyVerbruggen/Custom-URL-scheme#5-license)\r\n\r\n\r\n### BEWARE: \r\n### - [This Apache Cordova issue](https://issues.apache.org/jira/browse/CB-7606) causes problems with Cordova-iOS 3.7.0: the `handleOpenURL` function is not invoked upon cold start. Use a higher or lower version than 3.7.0.\r\n### - As of iOS 9.2, the dialog `Open in \"mycoolapp\"?` no longer blocks JS, so if you have a short timeout that opens the app store, the user will be taken to the store before they have a chance to see and answer the dialog. [See below](https://github.com/EddyVerbruggen/Custom-URL-scheme#ios-usage) for available solutions.\r\n\r\n## 1. Description\r\n\r\nThis plugin allows you to start your app by calling it with a URL like `mycoolapp://path?foo=bar`\r\n\r\n* Compatible with [Cordova Plugman](https://github.com/apache/cordova-plugman)\r\n* Submitted and waiting for approval at PhoneGap Build ([more information](https://build.phonegap.com/plugins))\r\n\r\n### iOS specifics\r\n* Forget about [using config.xml to define a URL scheme](https://build.phonegap.com/docs/config-xml#url_schemes). This plugin adds 2 essential enhancements:\r\n  - Uniform URL scheme with Android (for which there is no option to define a URL scheme via PhoneGap configuration at all).\r\n  - You still need to wire up the Javascript to handle incoming events. This plugin assists you with that.\r\n* Tested on iOS 5.1, 6 and 7.\r\n\r\n### Android specifics\r\n* Unlike iOS, there is no way to use config.xml to define a scheme for your app. Now there is.\r\n* Tested on Android 4.3, will most likely work with 2.2 and up.\r\n* If you're trying to launch your app from an In-App Browser it opened previously, then [use this In-App Browser plugin fork](https://github.com/Innovation-District/cordova-plugin-inappbrowser) which allows that.\r\n* In case you have a multi-page app (multiple HTML files, and all implementing handleOpenURL), set the preference `CustomURLSchemePluginClearsAndroidIntent` to `true` in `config.xml` so the function won't be triggered multiple times. Note that this may interfere with other plugins requiring the intent data.\r\n\r\n\r\n## 2. Installation\r\n\r\n### Automatically (CLI / Plugman)\r\nLaunchMyApp is compatible with [Cordova Plugman](https://github.com/apache/cordova-plugman).\r\nReplace `mycoolapp` by a nice scheme you want to have your app listen to:\r\n\r\nLatest release on npm:\r\n```\r\n$ cordova plugin add cordova-plugin-customurlscheme --variable URL_SCHEME=mycoolapp\r\n```\r\n\r\nBleeding edge master version from Github:\r\n```\r\n$ cordova plugin add https://github.com/EddyVerbruggen/Custom-URL-scheme.git --variable URL_SCHEME=mycoolapp\r\n```\r\n(Note that the Phonegap CLI didn't support `--variable` before version 3.6.3, so please use the Cordova CLI as shown above in case you're on an older version)\r\n\r\nThe LaunchMyApp.js file is brought in automatically.\r\n\r\nNote for iOS: there was a bug in CLI which caused an error in your `*-Info.plist`.\r\nPlease manually remove the blank line and whitespace (if any) from `NSMainNibFile` and `NSMainNibFile~ipad` (or your app won't start at all).\r\n\r\n\r\n### Manually\r\nDon't shoot yourself in the foot - use the CLI! That being said, here goes:\r\n\r\n#### iOS\r\n1\\. `Copy www/ios/LaunchMyApp.js` to `www/js/plugins/LaunchMyApp.js` and reference it in your `index.html`:\r\n```html\r\n<script type=\"text/javascript\" src=\"js/plugins/LaunchMyApp.js\"></script>\r\n```\r\n\r\n2\\. Add this to your `*-Info.plist` (replace `URL_SCHEME` by a nice scheme you want to have your app listen to, like `mycoolapp`):\r\n```xml\r\n<key>CFBundleURLTypes</key>\r\n<array>\r\n  <dict>\r\n    <key>CFBundleURLSchemes</key>\r\n    <array>\r\n      <string>URL_SCHEME</string>\r\n    </array>\r\n  </dict>\r\n</array>\r\n```\r\n\r\n#### Android\r\n1\\. Copy www/android/LaunchMyApp.js to www/js/plugins/LaunchMyApp.js and reference it in your `index.html`:\r\n```html\r\n<script type=\"text/javascript\" src=\"js/plugins/LaunchMyApp.js\"></script>\r\n```\r\n\r\n2\\. Add the following xml to your `config.xml` to always use the latest version of this plugin:\r\n```xml\r\n<plugin name=\"LaunchMyApp\" value=\"nl.xservices.plugins.LaunchMyApp\"/>\r\n```\r\n\r\n3\\. Copy `LaunchMyApp.java` to `platforms/android/src/nl/xservices/plugins` (create the folders)\r\n\r\n4\\. Add the following to your `AndroidManifest.xml` inside the `/manifest/application/activity` node (replace `URL_SCHEME` by a nice scheme you want to have your app listen to, like `mycoolapp`):\r\n```xml\r\n<intent-filter>\r\n  <data android:scheme=\"URL_SCHEME\"/>\r\n  <action android:name=\"android.intent.action.VIEW\" />\r\n  <category android:name=\"android.intent.category.DEFAULT\" />\r\n  <category android:name=\"android.intent.category.BROWSABLE\" />\r\n</intent-filter>\r\n```\r\n\r\n5\\. In `AndroidManifest.xml` set the launchMode to singleTask to avoid issues like [#24]. `<activity android:launchMode=\"singleTask\" ..`\r\n\r\n### PhoneGap Build\r\n\r\nUsing LaunchMyApp with PhoneGap Build requires you to add the following xml to your `config.xml` to use the latest version of this plugin (replace `mycoolapp` by a nice scheme you want to have your app listen to):\r\n```xml\r\n<gap:plugin name=\"cordova-plugin-customurlscheme\" source=\"npm\">\r\n  <param name=\"URL_SCHEME\" value=\"mycoolapp\" />\r\n</gap:plugin>\r\n```\r\n\r\nThe LaunchMyApp.js file is brought in automatically.\r\n\r\nNOTE: When Hydration is enabled at PGB, this plugin may not work.\r\n\r\n### Restoring cordova plugin settings on plugin add or update\r\nIn order to be able to restore the plugin settings on `cordova plugin add`, one need to add the following feature into config.xml. Note that if you added the plugin with the `--save` param you will find this in your `config.xml` already, except for the `variable` tag which is likely a `param` tag. [Change that.](https://github.com/EddyVerbruggen/Custom-URL-scheme/issues/76)\r\n```xml\r\n  <feature name=\"Custom URL scheme\">\r\n    <param name=\"id\" value=\"cordova-plugin-customurlscheme\" />\r\n    <param name=\"url\" value=\"https://github.com/EddyVerbruggen/Custom-URL-scheme.git\" />\r\n    <variable name=\"URL_SCHEME\" value=\"mycoolapp\" /><!-- change as appropriate -->\r\n  </feature>\r\n```\r\n\r\nPlease notice that URL_SCHEME is saved as `variable`, not as `prop`. However if you do `cordova plugin add` with a --save option, cordova will write the URL_SCHEME as a `prop`, you need to change the tag name from `param` to `variable` in this case.\r\n\r\nThese plugin restore instructions are tested on:\r\ncordova-cli 4.3.+ and cordova-android 3.7.1+\r\n\r\n\r\n## 3. Usage\r\n\r\n1a\\. Your app can be launched by linking to it like this from a website or an email for example (all of these will work):\r\n```html\r\n<a href=\"mycoolapp://\">Open my app</a>\r\n<a href=\"mycoolapp://somepath\">Open my app</a>\r\n<a href=\"mycoolapp://somepath?foo=bar\">Open my app</a>\r\n<a href=\"mycoolapp://?foo=bar\">Open my app</a>\r\n```\r\n\r\n`mycoolapp` is the value of URL_SCHEME you used while installing this plugin.\r\n\r\n1b\\. If you're trying to open your app from another PhoneGap app, use the InAppBrowser plugin and launch the receiving app like this, to avoid a 'protocol not supported' error:\r\n```html\r\n<button onclick=\"window.open('mycoolapp://', '_system')\">Open the other app</button>\r\n```\r\n\r\n2\\. When your app is launched by a URL, you probably want to do something based on the path and parameters in the URL. For that, you could implement the (optional) `handleOpenURL(url)` method, which receives the URL that was used to launch your app.\r\n```javascript\r\nfunction handleOpenURL(url) {\r\n  console.log(\"received url: \" + url);\r\n}\r\n```\r\n\r\nIf you want to alert the URL for testing the plugin, at least on iOS you need to wrap it in a timeout like this:\r\n```javascript\r\nfunction handleOpenURL(url) {\r\n  setTimeout(function() {\r\n    alert(\"received url: \" + url);\r\n  }, 0);\r\n}\r\n```\r\nA more useful implementation would mean parsing the URL, saving any params to sessionStorage and redirecting the app to the correct page inside your app.\r\nAll this happens before the first page is loaded.\r\n\r\n### iOS Usage\r\nA common method of deeplinking is to give the user the URL of a webpage (for instance http://linker.myapp.com/pathfoo) that opens the app if installed or the app store if not. This can be done in the following ways, depending on the desired UX:\r\n\r\n1. The page content has a button that says \"Install app\" and when clicked opens the app store by doing `location.href = 'itms-apps://itunes.apple.com/us/app/mycoolapp/idfoo'`. On page load, do `location.href = 'mycoolapp://pathfoo'`. If the user has the app, they will see a dialog that says `Open in \"mycoolapp\"? [Cancel] [Open]`. If the user does not have the app, they will see an alert that says `Cannot Open Page: Safari cannot open the page because the address is invalid`. Once they dismiss the alert, they see the button that opens the app store, and they tap it.\r\n2. The page has two buttons: one that opens the app, and one that opens the app store.\r\n3. On page load, open a Universal Link using [cordova-universal-links-plugin](https://github.com/nordnet/cordova-universal-links-plugin). (A Universal Link either opens the app or the app store.) Then fall back to one of the above methods if Univeral Links is not supported.\r\n\r\nYou can also use a service that provides pages that do #3 for you, such as [Branch](https://branch.io/).\r\n\r\n### CSP - or: `handleOpenURL` doesn't work\r\nThe Whitelist plugin will prevent inline JS from executing, unless you whitelist the url scheme. Please see [this SO issue](http://stackoverflow.com/questions/34257097/using-handleopenurl-with-custom-url-scheme-in-cordova/34281420#34281420) for details.\r\n\r\n### Meteor / getLastIntent (Android only)\r\nWhen running a [meteor](meteor.com) app in the cordova environment, `handleOpenURL` doesn't get called after a cold start, because cordova resets the javascript world during startup and our timer waiting for `handleOpenURL` gets vanished (see [#98](https://github.com/EddyVerbruggen/Custom-URL-scheme/issues/98)). To get the intent by which the app was started in a meteor cordova app you need to ask for it from the meteor side with `getLastIntent` like this.\r\n```javascript\r\nMeteor.startup(function() {\r\n  if (Meteor.isCordova) {\r\n    window.plugins.launchmyapp.getLastIntent(function(url) {\r\n      if (intent.indexOf('mycoolapp://' > -1)) {\r\n        console.log(\"received url: \" + url);\r\n      } else {\r\n        return console.log(\"ignore intent: \" + url);\r\n      }\r\n    }, function(error) {\r\n      return console.log(\"no intent received\");\r\n    });\r\n    return;\r\n  }\r\n});\r\n```\r\n\r\n## 4. URL Scheme hints\r\nPlease choose a URL_SCHEME which which complies to these restrictions:\r\n- Don't use an already registered scheme (like `fb`, `twitter`, `comgooglemaps`, etc).\r\n- Use only lowercase characters.\r\n- Don't use a dash `-` because on Android it will become underscore `_`.\r\n- Use only 1 word (no spaces).\r\n\r\nTIP: test your scheme by installing the app on a device or simulator and typing yourscheme:// in the browser URL bar, or create a test HTML page with a link to your app to impress your buddies.\r\n\r\n\r\n## 5. License\r\n\r\n[The MIT License (MIT)](http://www.opensource.org/licenses/mit-license.html)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/EddyVerbruggen/Custom-URL-scheme.git"
  },
  "version": "4.3.0"
}
